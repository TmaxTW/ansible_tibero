

- name: Run gen_tip.sh 
  shell: "{{tb_home}}/config/gen_tip.sh"
  args:
    chdir: "{{tb_home}}/config"
    executable: /bin/bash
  environment:
    TB_HOME: "{{tb_home}}"
    TB_SID: "{{tb_sid}}"
    PATH: "{{tb_home}}/bin:{{tb_home}}/config:{{tb_home}}/client/bin:{{ansible_env.PATH}}"
    LD_LIBRARY_PATH: "{{tb_home}}/lib:{{tb_home}}/client/lib"
  run_once: true
  become: yes
  become_user: "{{tb_user}}" 
  become_flags: '-i'

- name: Copy template file into Tibero Initialization Parameters (TIP) file for {{tb_sid}}
  template:
    src: tibero_tip.j2
    dest: "{{tb_home}}/config/{{tb_sid}}.tip"

- name: Boot Database {{tb_sid}} into NOMOUNT mode 
  shell: "tbboot nomount"
  args:
    executable: /bin/bash
  args:
    chdir: "{{tb_home}}/config"
    executable: /bin/bash
  environment:
    TB_HOME: "{{tb_home}}"
    TB_SID: "{{tb_sid}}"
    PATH: "{{tb_home}}/bin:{{tb_home}}/config:{{tb_home}}/client/bin:{{ansible_env.PATH}}"
    LD_LIBRARY_PATH: "{{tb_home}}/lib:{{tb_home}}/client/lib"
  become: yes
  become_user: "{{tb_user}}"  
  become_flags: '-i'
  ignore_errors: yes
  run_once: true

- name: Tibero - createdb.sql
  template: src=createdb.j2 dest={{tb_home}}/instance/{{tb_sid}}/createdb.sql

- name: Create Database {{tb_sid}}
  shell:  tbsql sys/tibero @{{tb_home}}/instance/{{tb_sid}}/createdb.sql
  args:
    executable: /bin/bash
  environment:
    TB_HOME: "{{tb_home}}"
    TB_SID: "{{tb_sid}}"
    PATH: "{{tb_home}}/bin:{{tb_home}}/config:{{tb_home}}/client/bin:{{ansible_env.PATH}}"
    LD_LIBRARY_PATH: "{{tb_home}}/lib:{{tb_home}}/client/lib"
  register: stdout
  run_once: true
  become: yes
  become_user: "{{tb_user}}"  
  become_flags: '-i'

#- name: Tibero - Create sysconfig file
#  template: src=tibero_envs.j2 dest=/etc/sysconfig/tibero
- name: Tibero - Create Service Startup Script
  template: src=tibero_service_shell_script.j2 dest={{tb_home}}/bin/tibero_service.sh mode=755

- name: Tibero - Create systemd Unit file
  template: src=tibero_service.j2 dest=/lib/systemd/system/tibero.service mode=644
  notify:
    - reload systemctl
 
- name: Reload systemd
  systemd: daemon-reload=yes

- name: Tibero - createdb.sql
  template: src=createdb.j2 dest={{tb_home}}/instance/{{tb_sid}}/createdb.sql

- name: Start Database {{tb_sid}} into NORMAL mode
  shell: "tbdown; sleep 5; tbboot"
  args:
    executable: /bin/bash
  args:
    chdir: "{{tb_home}}/config"
    executable: /bin/bash
  environment:
    TB_HOME: "{{tb_home}}"
    TB_SID: "{{tb_sid}}"
    PATH: "{{tb_home}}/bin:{{tb_home}}/config:{{tb_home}}/client/bin:{{ansible_env.PATH}}"
    LD_LIBRARY_PATH: "{{tb_home}}/lib:{{tb_home}}/client/lib"
  become: yes
  become_user: "{{tb_user}}"  
  become_flags: '-i'
  ignore_errors: yes
  run_once: true

#- name: Tibero - Start Tibero Database {{tb_sid}}
# service: name=tibero.service state=started enabled=yes

#- name: Boot Database {{tb_sid}} into NORMAL mode 
#  shell: "source ~/.bash_profile && tbboot"
#  become: yes
#  become_user: "{{tb_user}}"  
#  become_flags: '-i'

- name: Run system.sh 
  shell: "sh $TB_HOME/scripts/system.sh -p1 tibero -p2 syscat -a1 y -a2 y -a3 y -a4 y"
  args:
    executable: /bin/bash
  args:
    chdir: "{{tb_home}}"
    executable: /bin/bash
  environment:
    TB_HOME: "{{tb_home}}"
    TB_SID: "{{tb_sid}}"
    PATH: "{{tb_home}}/bin:{{tb_home}}/config:{{tb_home}}/client/bin:{{ansible_env.PATH}}"
    LD_LIBRARY_PATH: "{{tb_home}}/lib:{{tb_home}}/client/lib"
  become: yes
  become_user: "{{tb_user}}"  
  become_flags: '-i'
